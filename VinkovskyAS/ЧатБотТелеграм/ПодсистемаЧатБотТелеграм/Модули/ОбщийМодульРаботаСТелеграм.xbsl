
@Глобально
@НаСервере
@ДоступноСКлиента
метод ИнформацияОБоте(Токен: Строка): Соответствие<Строка, Объект?>
    пер Ответ = новый Соответствие<Строка, Объект?>()
    знч БазовыйURL = ОбщийМодульРаботаСТелеграмСлужебныйСервер.БазовыйURL()
    знч URL = "/bot" + Токен + "/getMe"

    знч РезультатЗапроса = КлиентHttp.СБазовымUrl(БазовыйURL).ЗапросGet(URL).Выполнить()

    знч КодСостояния = РезультатЗапроса.КодСостояния
    знч Причина = РезультатЗапроса.Причина
    если КодСостояния != 200
        Ответ.Вставить("ok", Ложь)
        Ответ.Вставить("description", Причина)
    иначе
        знч ОтветСтрокой = РезультатЗапроса.Тело.ПрочитатьКакСтроку()
        знч НастрокиЧтенияJSON = новый НастройкиЧтенияОбъектовJson()
        НастрокиЧтенияJSON.ИгнорироватьНеизвестныеСвойства = Истина
        Ответ = СериализацияJson.ПрочитатьСоответствие(ОтветСтрокой)
    ;

    возврат Ответ
;


@Глобально
@НаСервере
@ДоступноСКлиента
метод Обновить(Токен: Строка): Соответствие<Строка, Объект?>
    пер Ответ = новый Соответствие<Строка, Объект?>()
    знч БазовыйURL = ОбщийМодульРаботаСТелеграмСлужебныйСервер.БазовыйURL()
    знч URL = "/bot" + Токен + "/getUpdates"

    знч РезультатЗапроса = КлиентHttp.СБазовымUrl(БазовыйURL).ЗапросGet(URL).Выполнить()
    знч КодСостояния = РезультатЗапроса.КодСостояния
    знч Причина = РезультатЗапроса.Причина
    если КодСостояния != 200
        Ответ.Вставить("ok", Ложь)
        Ответ.Вставить("description", Причина)
    иначе
        знч ОтветСтрокой = РезультатЗапроса.Тело.ПрочитатьКакСтроку()
        знч НастрокиЧтенияJSON = новый НастройкиЧтенияОбъектовJson()
        НастрокиЧтенияJSON.ИгнорироватьНеизвестныеСвойства = Истина
        Ответ = СериализацияJson.ПрочитатьСоответствие(ОтветСтрокой)
    ;

    возврат Ответ
;


@Глобально
@НаСервере
@ДоступноСКлиента
метод ОтправитьСообщение(
    СообщениеДляОтправки: ОбщийМодульРаботаСТелеграмКонструкторы.СообщениеДляОтправки): Соответствие<Строка, Объект?>
    пер Ответ = новый Соответствие<Строка, Объект?>()
    знч БазовыйURL = ОбщийМодульРаботаСТелеграмСлужебныйСервер.БазовыйURL()
    знч URL = "/bot" + СообщениеДляОтправки.Токен + "/sendMessage"

    знч РезультатЗапроса = КлиентHttp.СБазовымUrl(БазовыйURL).ЗапросGet(URL)
        .ДобавитьПараметрЗапроса("parse_mode", СообщениеДляОтправки.Разметка)
        .ДобавитьПараметрЗапроса("text", СообщениеДляОтправки.Текст)
        .ДобавитьПараметрЗапроса("reply_markup", СообщениеДляОтправки.Клавиатура)
        .ДобавитьПараметрЗапроса("chat_id", СообщениеДляОтправки.ЧатИд)
        .Выполнить()
    знч КодСостояния = РезультатЗапроса.КодСостояния
    знч Причина = РезультатЗапроса.Причина
    если КодСостояния != 200
        Ответ.Вставить("ok", Ложь)
        Ответ.Вставить("description", Причина)
    иначе
        знч ОтветСтрокой = РезультатЗапроса.Тело.ПрочитатьКакСтроку()
        знч НастрокиЧтенияJSON = новый НастройкиЧтенияОбъектовJson()
        НастрокиЧтенияJSON.ИгнорироватьНеизвестныеСвойства = Истина
        Ответ = СериализацияJson.ПрочитатьСоответствие(ОтветСтрокой)
    ;

    возврат Ответ
;


@Глобально
@НаСервере
@ДоступноСКлиента
метод ОтправитьСообщениеСКонтентом(
    СообщениеДляОтправки: ОбщийМодульРаботаСТелеграмКонструкторы.СообщениеДляОтправки): Соответствие<Строка, Объект?>
    знч БазовыйURL = ОбщийМодульРаботаСТелеграмСлужебныйСервер.БазовыйURL()
    знч URL = "/bot" + СообщениеДляОтправки.Токен + СообщениеДляОтправки.Метод
    пер Ответ = новый Соответствие<Строка, Объект?>()

    знч Boundary = новый Ууид().ВСтроку().Заменить("-", "")
    знч РазделительСтрок = "-------------%Boundary"
    знч ТипДанных = "multipart/form-data; boundary=" + Boundary

    исп Поток = новый ВременныйПотокЗаписи()

    ОбщийМодульРаботаСТелеграмСлужебныйСервер.ПараметрВСтроку(Поток, СообщениеДляОтправки.Разметка, "parse_mode",
        РазделительСтрок)
    ОбщийМодульРаботаСТелеграмСлужебныйСервер.ПараметрВСтроку(Поток, СообщениеДляОтправки.Текст, "caption",
        РазделительСтрок)
    ОбщийМодульРаботаСТелеграмСлужебныйСервер.ПараметрВСтроку(Поток, СообщениеДляОтправки.Клавиатура, "reply_markup",
        РазделительСтрок)
    ОбщийМодульРаботаСТелеграмСлужебныйСервер.ПараметрВСтроку(Поток, СообщениеДляОтправки.ЧатИд, "chat_id",
        РазделительСтрок)

    ОбщийМодульРаботаСТелеграмСлужебныйСервер.ФайлВСтроку(Поток, СообщениеДляОтправки, РазделительСтрок)

    Поток.Записать("--%РазделительСтрок--")
    

    знч РезультатЗапроса = КлиентHttp.СБазовымUrl(БазовыйURL).ЗапросPost(URL)
        .УстановитьТаймаутСоединения(240с)
        .ДобавитьЗаголовок("Content-Type", ТипДанных)
        .ДобавитьЗаголовок("Accept-Encoding", "gzip")
        .ДобавитьЗаголовок("Accept", "*/*")
        .ДобавитьЗаголовок("Connection", "keep-alive")
        .ДобавитьЗаголовок("Accept-Charset", "utf-8")
        .УстановитьТело(Поток.ОткрытьПотокЧтения())
        .УстановитьТипСодержимого("multipart/form-data; boundary=%РазделительСтрок")
        .Выполнить()
    знч КодСостояния = РезультатЗапроса.КодСостояния
    знч Причина = РезультатЗапроса.Причина
    если КодСостояния != 200
        знч ОтветСтрокой = РезультатЗапроса.Тело.ПрочитатьКакСтроку()
        Ответ.Вставить("ok", Ложь)
        Ответ.Вставить("description", Причина+Символы.НОВАЯ_СТРОКА+ОтветСтрокой)
    иначе
        знч ОтветСтрокой = РезультатЗапроса.Тело.ПрочитатьКакСтроку()
        знч НастрокиЧтенияJSON = новый НастройкиЧтенияОбъектовJson()
        НастрокиЧтенияJSON.ИгнорироватьНеизвестныеСвойства = Истина
        Ответ = СериализацияJson.ПрочитатьСоответствие(ОтветСтрокой)
    ;

    Поток.Закрыть()
    возврат Ответ
;