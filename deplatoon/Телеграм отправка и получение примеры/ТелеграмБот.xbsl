
конст НАИМЕНОВАНИЕ_НАСТРОЙКИ_ТОКЕНА: Строка = "ТокенДоступа"
конст КЛЮЧ_ОБЪЕКТА_НАПОМИНАТЕЛЯ: Строка = "Тест"


@НаСервере
исключение ИсключениеОтсутствуетТокен
;

@НаСервере @НаКлиенте
@ВПроекте
структура ОтветОСостоянииБота
    
    знч ok: Булево
    знч result: ИнформацияОБоте
;

@НаСервере @НаКлиенте
@Локально
структура ИнформацияОБоте
    
    знч first_name: Строка
    знч username: Строка
;

@НаСервере @НаКлиенте
@ВПроекте
структура ВходящееСообщение
    
    знч Сообщение: Строка
    знч ИдентификаторЧата: Строка
    знч Представление: Строка
;


@НаСервере
метод ПолучитьТокен(): Строка
    пер Результат: Строка?
    
    знч Запрос = Запрос{
        ВЫБРАТЬ
            ХранилищеНастроек.Значение КАК Значение
        ИЗ
            // Ваше хранилище настроек КАК ХранилищеНастроек
        ГДЕ
            ХранилищеНастроек.Наименование == %НАИМЕНОВАНИЕ_НАСТРОЙКИ_ТОКЕНА И
            ХранилищеНастроек.КлючОбъекта == %КЛЮЧ_ОБЪЕКТА_НАПОМИНАТЕЛЯ
    }
    
    попытка 
        Результат = Запрос.Выполнить().Единственный().Значение    
    поймать Исключение: неизвестно
        выбросить новый ИсключениеОтсутствуетТокен("В настройках хранилища не задан токен доступа к боту", Исключение)
    ;
    возврат Результат
;


@ВПроекте
@НаСервере @ДоступноСКлиента
метод ОтправитьСообщение(Сообщение:Строка, Адресат: Строка): Строка
    пер Токен = ПолучитьТокен()
    
    пер МойКлиент = КлиентHttp.СБазовымUrl("https://api.telegram.org/bot%Токен")
        .СПараметрамиЗащиты(новый ПараметрыЗащищенногоСоединения())
    
    пер Ответ = МойКлиент.ЗапросGet("/sendMessage")
        .УстановитьПараметрЗапроса("chat_id", Адресат)
        .УстановитьПараметрЗапроса("text", Сообщение)
        .Выполнить()

    возврат Ответ.Тело.ПрочитатьКакСтроку()
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ИнформацияОБоте(Сообщение:Строка, Адресат: Строка): ОтветОСостоянииБота
    пер Токен = ПолучитьТокен()
    
    пер МойКлиент = КлиентHttp.СБазовымUrl("https://api.telegram.org/bot%Токен")
        .СПараметрамиЗащиты(новый ПараметрыЗащищенногоСоединения())
    
    пер Ответ = МойКлиент.ЗапросGet("/getMe").Выполнить()
    
    
    пер НастройкиЧтения = новый НастройкиЧтенияОбъектовJson()
    НастройкиЧтения.ИгнорироватьНеизвестныеСвойства = Истина
    пер Результат = СериализацияJson.ПрочитатьОбъект(Ответ.Тело.ПрочитатьКакСтроку(), Тип<ОтветОСостоянииБота>, НастройкиЧтения)
    возврат Результат
    
;

@ВПроекте
@НаСервере @ДоступноСКлиента
метод ПолучитьОбновления(): неизвестно
    пер Токен = ПолучитьТокен()
    
    пер МойКлиент = КлиентHttp.СБазовымUrl("https://api.telegram.org/bot%Токен")
        .СПараметрамиЗащиты(новый ПараметрыЗащищенногоСоединения())
    
    пер Ответ = МойКлиент.ЗапросGet("/getUpdates").Выполнить()

    знч ТелоОтветаСтрокой = Ответ.Тело.ПрочитатьКакСтроку()
    
    пер Результат = СериализацияJson.ПрочитатьСоответствие(ТелоОтветаСтрокой) как неизвестно

    возврат Результат
;


